# ------------------------------
# GitHub Actions: deploy-umm.yml
# Save as: .github/workflows/deploy-umm.yml
# ------------------------------

name: Deploy UMM

on:
  push:
    branches: ["master"]

jobs:
  discover:
    runs-on: ubuntu-latest
    outputs:
      ips: ${{ steps.discover.outputs.ips }}

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Discover EC2 instances in ASG
        id: discover
        run: |
          IPS=$(aws ec2 describe-instances \
            --filters "Name=tag:aws:autoscaling:groupName,Values=umm-asg" \
            --query 'Reservations[*].Instances[*].PublicIpAddress' \
            --output text)
          echo "ips=$(echo \"$IPS\" | jq -R -s -c 'split(\" \")')" >> $GITHUB_OUTPUT

  deploy:
    needs: discover
    runs-on: ubuntu-latest

    strategy:
      matrix:
        host: ${{ fromJson(needs.discover.outputs.ips) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_REPO_NAME: umm-app
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$IMAGE_REPO_NAME:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$IMAGE_REPO_NAME:$IMAGE_TAG

      - name: Deploy UMM to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ matrix.host }}
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker stop umm_app || true
            docker rm umm_app || true
            docker pull ${{ steps.login-ecr.outputs.registry }}/umm-app:latest
            docker run -d \
              --name umm_app \
              -p 4000:4000 \
              -e SECRET_KEY_BASE=super_secret_dummy_key \
              -e PHX_SERVER=true \
              -e PHX_HOST=0.0.0.0 \
              -e PORT=4000 \
              --restart always \
              ${{ steps.login-ecr.outputs.registry }}/umm-app:latest
